{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Common\\\\DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { createDeck, readDeck, updateDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckForm({\n  updateCount\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const [deckCopy, setDeckCopy] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController(); //Get deck on mount if editing deck\n\n    async function getDeck() {\n      try {\n        const response = await readDeck(deckId, abortController.signal);\n        await setDeck({ ...response\n        });\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Aborted getDeck() in CardForm\");\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    if (deckId) {\n      getDeck();\n    }\n\n    return () => abortController.abort();\n  }, []); //Determine whether to display additional breadcrumb for existing deck\n\n  function CrumbCheck() {\n    if (deckId) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  } //Handle text change\n\n\n  const handleChange = ({\n    target\n  }) => {\n    if (target.id === \"name\") {\n      setDeck({ ...deck,\n        name: target.value\n      });\n    } else {\n      setDeck({ ...deck,\n        description: target.value\n      });\n    }\n  }; //Cancel click handler\n\n\n  const handleCancelClick = () => {\n    if (deckId) {\n      history.push(`/decks/${deckId}`);\n    } else {\n      history.push(\"/\");\n    }\n  }; //Form submit handler\n\n\n  const handleSubmitClick = async e => {\n    e.preventDefault();\n\n    if (deckId) {\n      await updateDeck(deck);\n      history.push(`/decks/${deckId}`);\n    } else {\n      await createDeck(deck);\n      setDeck({\n        name: \"\",\n        description: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-door-open-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CrumbCheck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: deckId ? \"Edit Deck\" : \"Create Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: deckId ? \"Edit Deck\" : \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Deck Name\",\n          value: deck.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          className: \"form-control\",\n          placeholder: \"Brief description of the deck\",\n          value: deck.description,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary mr-2\",\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckForm, \"LskmWrD1hNBts4p6GFFCfI9mabk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckForm;\nDeckForm.propTypes = {\n  updateCount: PropTypes.func\n};\nexport default DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Common/DeckForm.js"],"names":["React","Fragment","useEffect","useState","Link","useHistory","useParams","PropTypes","createDeck","readDeck","updateDeck","DeckForm","updateCount","deckId","deck","setDeck","name","description","deckCopy","setDeckCopy","history","abortController","AbortController","getDeck","response","signal","err","console","log","abort","CrumbCheck","handleChange","target","id","value","handleCancelClick","push","handleSubmitClick","e","preventDefault","propTypes","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,iBAAjD;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAmC;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE;AAAzB,GAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiB,OAAO,GAAGf,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CADc,CAGd;;AACA,mBAAeC,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACI,MAAD,EAASQ,eAAe,CAACI,MAAzB,CAA/B;AACA,cAAMV,OAAO,CAAC,EAAE,GAAGS;AAAL,SAAD,CAAb;AAED,OAJD,CAIE,OAAOE,GAAP,EAAY;AACZ,YAAIA,GAAG,CAACV,IAAJ,KAAa,YAAjB,EAA+B;AAC7BW,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,SAFD,MAEO;AACL,gBAAMF,GAAN;AACD;AACF;AACF;;AAED,QAAIb,MAAJ,EAAY;AACVU,MAAAA,OAAO;AACR;;AAED,WAAO,MAAMF,eAAe,CAACQ,KAAhB,EAAb;AACD,GAvBQ,EAuBN,EAvBM,CAAT,CANiC,CA+BjC;;AACA,WAASC,UAAT,GAAsB;AACpB,QAAIjB,MAAJ,EAAY;AACV,0BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,MAAO,EAA3B;AAAA,oBAA+BC,IAAI,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACL,aAAO,IAAP;AACD;AACF,GA1CgC,CA4CjC;;;AACA,QAAMe,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnC,QAAIA,MAAM,CAACC,EAAP,KAAc,MAAlB,EAA0B;AACxBlB,MAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENE,QAAAA,IAAI,EAAEgB,MAAM,CAACE;AAFP,OAAD,CAAP;AAID,KALD,MAKO;AACLnB,MAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENG,QAAAA,WAAW,EAAEe,MAAM,CAACE;AAFd,OAAD,CAAP;AAID;AACF,GAZD,CA7CiC,CA2DjC;;;AACA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAItB,MAAJ,EAAY;AACVO,MAAAA,OAAO,CAACgB,IAAR,CAAc,UAASvB,MAAO,EAA9B;AACD,KAFD,MAEO;AACLO,MAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACD;AACF,GAND,CA5DiC,CAoEjC;;;AACA,QAAMC,iBAAiB,GAAG,MAAOC,CAAP,IAAa;AACrCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI1B,MAAJ,EAAY;AACV,YAAMH,UAAU,CAACI,IAAD,CAAhB;AACAM,MAAAA,OAAO,CAACgB,IAAR,CAAc,UAASvB,MAAO,EAA9B;AACD,KAHD,MAGO;AACL,YAAML,UAAU,CAACM,IAAD,CAAhB;AACAC,MAAAA,OAAO,CAAC;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,WAAW,EAAE;AAAzB,OAAD,CAAP;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,oCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBACGJ,MAAM,GAAG,WAAH,GAAiB;AAD1B;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAA,gBAAKA,MAAM,GAAG,WAAH,GAAiB;AAA5B;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,MADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,SAAS,EAAC,cAHZ;AAIE,UAAA,WAAW,EAAC,WAJd;AAKE,UAAA,KAAK,EAAEC,IAAI,CAACE,IALd;AAME,UAAA,QAAQ,EAAEe,YANZ;AAOE,UAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,aADL;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,WAAW,EAAC,+BAHd;AAIE,UAAA,KAAK,EAAEjB,IAAI,CAACG,WAJd;AAKE,UAAA,QAAQ,EAAEc,YALZ;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAwBE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,wBAFZ;AAGE,UAAA,OAAO,EAAEI,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GAxIQxB,Q;UACYL,S,EAGHD,U;;;KAJTM,Q;AA0ITA,QAAQ,CAAC6B,SAAT,GAAqB;AACnB5B,EAAAA,WAAW,EAAEL,SAAS,CAACkC;AADJ,CAArB;AAIA,eAAe9B,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createDeck, readDeck, updateDeck } from \"../../utils/api\";\r\n\r\nfunction DeckForm({ updateCount }) {\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState({ name: \"\", description: \"\" });\r\n  const [deckCopy, setDeckCopy] = useState({});\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    //Get deck on mount if editing deck\r\n    async function getDeck() {\r\n      try {\r\n        const response = await readDeck(deckId, abortController.signal);\r\n        await setDeck({ ...response });\r\n        \r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Aborted getDeck() in CardForm\");\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (deckId) {\r\n      getDeck();\r\n    }\r\n\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  //Determine whether to display additional breadcrumb for existing deck\r\n  function CrumbCheck() {\r\n    if (deckId) {\r\n      return (\r\n        <li className=\"breadcrumb-item\">\r\n          <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //Handle text change\r\n  const handleChange = ({ target }) => {\r\n    if (target.id === \"name\") {\r\n      setDeck({\r\n        ...deck,\r\n        name: target.value,\r\n      });\r\n    } else {\r\n      setDeck({\r\n        ...deck,\r\n        description: target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Cancel click handler\r\n  const handleCancelClick = () => {\r\n    if (deckId) {\r\n      history.push(`/decks/${deckId}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  //Form submit handler\r\n  const handleSubmitClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (deckId) {\r\n      await updateDeck(deck);\r\n      history.push(`/decks/${deckId}`);\r\n    } else {\r\n      await createDeck(deck);\r\n      setDeck({ name: \"\", description: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <i className=\"bi bi-door-open-fill\"></i> Home\r\n            </Link>\r\n          </li>\r\n          <CrumbCheck />\r\n          <li className=\"breadcrumb-item\">\r\n            {deckId ? \"Edit Deck\" : \"Create Deck\"}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>{deckId ? \"Edit Deck\" : \"Create Deck\"}</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Deck Name\"\r\n            value={deck.name}\r\n            onChange={handleChange}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            id=\"description\"\r\n            className=\"form-control\"\r\n            placeholder=\"Brief description of the deck\"\r\n            value={deck.description}\r\n            onChange={handleChange}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary mr-2\"\r\n            onClick={handleCancelClick}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDeckForm.propTypes = {\r\n  updateCount: PropTypes.func,\r\n};\r\n\r\nexport default DeckForm;\r\n"]},"metadata":{},"sourceType":"module"}