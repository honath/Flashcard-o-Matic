{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Common\\\\CardForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readCard, readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardForm() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({});\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    const abortController = new AbortController(); //Get deck on mount\n\n    async function getDeck() {\n      try {\n        const response = await readDeck(deckId, abortController.signal);\n        await setDeck({ ...response\n        });\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Aborted getDeck() in CardForm\");\n        } else {\n          throw err;\n        }\n      }\n    } //Get card on mount if cardId present\n\n\n    async function getCard() {\n      try {\n        const response = await readCard(deckId, abortController.signal);\n        await setCard({ ...response\n        });\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Aborted getCard() in CardForm\");\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    getDeck();\n\n    if (cardId) {\n      getCard();\n    }\n\n    return () => abortController.abort();\n  }, []); //If cardId \"/decks/:deckId/cards/:cardId/edit\" else \n\n  if (cardId) {} else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-door-open-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), \" Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-door-open-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), \" Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: \"filler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CardForm, \"qCQP2JaRCAfBneV8kwXFRqnjxQw=\", false, function () {\n  return [useParams];\n});\n\n_c = CardForm;\nexport default CardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Common/CardForm.js"],"names":["React","Fragment","useEffect","useState","Link","useParams","readCard","readDeck","CardForm","deckId","cardId","card","setCard","deck","setDeck","abortController","AbortController","getDeck","response","signal","err","name","console","log","getCard","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,iBAAnC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBL,SAAS,EAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CADc,CAGd;;AACA,mBAAeC,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAACE,MAAD,EAASM,eAAe,CAACI,MAAzB,CAA/B;AACA,cAAML,OAAO,CAAC,EAAE,GAAGI;AAAL,SAAD,CAAb;AACD,OAHD,CAGE,OAAOE,GAAP,EAAY;AACZ,YAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,SAFD,MAEO;AACL,gBAAMH,GAAN;AACD;AACF;AACF,KAfa,CAiBd;;;AACA,mBAAeI,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMN,QAAQ,GAAG,MAAMZ,QAAQ,CAACG,MAAD,EAASM,eAAe,CAACI,MAAzB,CAA/B;AACA,cAAMP,OAAO,CAAC,EAAE,GAAGM;AAAL,SAAD,CAAb;AACD,OAHD,CAGE,OAAOE,GAAP,EAAY;AACZ,YAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,SAFD,MAEO;AACL,gBAAMH,GAAN;AACD;AACF;AACF;;AAEDH,IAAAA,OAAO;;AAEP,QAAIP,MAAJ,EAAY;AACRc,MAAAA,OAAO;AACV;;AAED,WAAO,MAAMT,eAAe,CAACU,KAAhB,EAAb;AACD,GAtCQ,EAsCN,EAtCM,CAAT,CALkB,CA6ClB;;AACA,MAAIf,MAAJ,EAAY,CACX,CADD,MACO;AACL,wBACE,QAAC,QAAD;AAAA,6BACE;AAAK,sBAAW,YAAhB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA,sCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA,sCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAtEQF,Q;UACoBH,S;;;KADpBG,Q;AAwET,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { readCard, readDeck } from \"../../utils/api\";\r\n\r\nfunction CardForm() {\r\n  const { deckId, cardId } = useParams();\r\n  const [card, setCard] = useState({});\r\n  const [deck, setDeck] = useState({});\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    //Get deck on mount\r\n    async function getDeck() {\r\n      try {\r\n        const response = await readDeck(deckId, abortController.signal);\r\n        await setDeck({ ...response });\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Aborted getDeck() in CardForm\");\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Get card on mount if cardId present\r\n    async function getCard() {\r\n      try {\r\n        const response = await readCard(deckId, abortController.signal);\r\n        await setCard({ ...response });\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Aborted getCard() in CardForm\");\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    getDeck();\r\n\r\n    if (cardId) {\r\n        getCard();\r\n    }\r\n\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  //If cardId \"/decks/:deckId/cards/:cardId/edit\" else \r\n  if (cardId) {\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">\r\n                <i className=\"bi bi-door-open-fill\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">\r\n                <i className=\"bi bi-door-open-fill\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">filler</li>\r\n          </ol>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return <p>test</p>;\r\n}\r\n\r\nexport default CardForm;\r\n"]},"metadata":{},"sourceType":"module"}