{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport ListDecks from \"./ListDecks\";\nimport { listDecks } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  deckCount,\n  updateCount\n}) {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDecks() {\n      try {\n        const response = await listDecks(abortController.signal);\n        setDecks(response);\n      } catch (err) {\n        if (!err.name === \"AbortError\") {\n          throw err;\n        }\n      }\n    }\n\n    getDecks();\n    return () => abortController.abort();\n  }, [deckCount]);\n\n  if (decks) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        type: \"button\",\n        className: \"btn btn-secondary mb-2\",\n        to: \"/decks/new\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-plus-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" Create Deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), decks.map(({\n        id,\n        name,\n        description,\n        cards\n      }) => {\n        return /*#__PURE__*/_jsxDEV(ListDecks, {\n          id: id,\n          name: name,\n          description: description,\n          cards: cards,\n          updateCount: updateCount\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetching data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Home, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = Home;\nHome.propTypes = {\n  deckCount: PropTypes.number,\n  updateCount: PropTypes.func\n};\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Home/Home.js"],"names":["React","Fragment","useEffect","useState","Link","PropTypes","ListDecks","listDecks","Home","deckCount","updateCount","decks","setDecks","abortController","AbortController","getDecks","response","signal","err","name","abort","map","id","description","cards","propTypes","number","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAA0C;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACM,eAAe,CAACI,MAAjB,CAAhC;AAEAL,QAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,OAJD,CAIE,OAAOE,GAAP,EAAY;AACZ,YAAI,CAACA,GAAG,CAACC,IAAL,KAAc,YAAlB,EAAgC;AAC9B,gBAAMD,GAAN;AACD;AACF;AACF;;AAEDH,IAAAA,QAAQ;AACR,WAAO,MAAMF,eAAe,CAACO,KAAhB,EAAb;AACD,GAjBQ,EAiBN,CAACX,SAAD,CAjBM,CAAT;;AAmBA,MAAIE,KAAJ,EAAW;AACT,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC,wBAA9B;AAAuD,QAAA,EAAE,EAAC,YAA1D;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGA,KAAK,CAACU,GAAN,CAAU,CAAC;AAAEC,QAAAA,EAAF;AAAMH,QAAAA,IAAN;AAAYI,QAAAA,WAAZ;AAAyBC,QAAAA;AAAzB,OAAD,KAAsC;AAC/C,4BACE,QAAC,SAAD;AAEE,UAAA,EAAE,EAAEF,EAFN;AAGE,UAAA,IAAI,EAAEH,IAHR;AAIE,UAAA,WAAW,EAAEI,WAJf;AAKE,UAAA,KAAK,EAAEC,KALT;AAME,UAAA,WAAW,EAAEd;AANf,WACOY,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GApBD,MAoBO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAEF;;GA9CQd,I;;KAAAA,I;AAgDTA,IAAI,CAACiB,SAAL,GAAiB;AACfhB,EAAAA,SAAS,EAAEJ,SAAS,CAACqB,MADN;AAEfhB,EAAAA,WAAW,EAAEL,SAAS,CAACsB;AAFR,CAAjB;AAKA,eAAenB,IAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ListDecks from \"./ListDecks\";\r\nimport { listDecks } from \"../../utils/api\";\r\n\r\nfunction Home({ deckCount, updateCount }) {\r\n  const [decks, setDecks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function getDecks() {\r\n      try {\r\n        const response = await listDecks(abortController.signal);\r\n\r\n        setDecks(response);\r\n      } catch (err) {\r\n        if (!err.name === \"AbortError\") {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    getDecks();\r\n    return () => abortController.abort();\r\n  }, [deckCount]);\r\n\r\n  if (decks) {\r\n    return (\r\n      <Fragment>\r\n        <Link type=\"button\" className=\"btn btn-secondary mb-2\" to=\"/decks/new\">\r\n          <i className=\"bi bi-plus-square\"></i> Create Deck\r\n        </Link>\r\n        {decks.map(({ id, name, description, cards }) => {\r\n          return (\r\n            <ListDecks\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              description={description}\r\n              cards={cards}\r\n              updateCount={updateCount}\r\n            />\r\n          );\r\n        })}\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return <p>Fetching data...</p>\r\n  }\r\n  \r\n}\r\n\r\nHome.propTypes = {\r\n  deckCount: PropTypes.number,\r\n  updateCount: PropTypes.func,\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}