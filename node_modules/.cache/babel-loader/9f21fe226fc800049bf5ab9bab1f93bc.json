{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks\\\\ListCards.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { deleteCard } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCards({\n  id,\n  front,\n  back,\n  deckId,\n  updateCardCount\n}) {\n  async function handleDeleteClick() {\n    const confirmDelete = window.confirm(`Delete this card? \\n\\nYou will not be able to recover it.`);\n\n    if (confirmDelete) {\n      await deleteCard(id);\n      updateCardCount(-1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-group-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-end\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        type: \"button\",\n        className: \"btn btn-secondary mx-2\",\n        to: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-pencil-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \" Edit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger mr-2\",\n        onClick: () => handleDeleteClick(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi-trash\",\n          role: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ListCards;\nListCards.propTypes = {\n  id: PropTypes.number,\n  front: PropTypes.string,\n  back: PropTypes.string,\n  deckId: PropTypes.number,\n  updateCardCount: PropTypes.func\n};\nexport default ListCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCards\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Decks/ListCards.js"],"names":["React","PropTypes","Link","deleteCard","ListCards","id","front","back","deckId","updateCardCount","handleDeleteClick","confirmDelete","window","confirm","propTypes","number","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAnB,EAAiE;AAC/D,iBAAeC,iBAAf,GAAmC;AACjC,UAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CACnB,2DADmB,CAAtB;;AAIA,QAAIF,aAAJ,EAAmB;AACjB,YAAMR,UAAU,CAACE,EAAD,CAAhB;AACAI,MAAAA,eAAe,CAAC,CAAC,CAAF,CAAf;AACD;AACF;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBH;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC,wBAA9B;AAAuD,QAAA,EAAE,EAAC,GAA1D;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,qBAFZ;AAGE,QAAA,OAAO,EAAE,MAAMG,iBAAiB,EAHlC;AAAA,+BAKE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAwB,UAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KAhCQN,S;AAkCTA,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,EAAE,EAAEJ,SAAS,CAACc,MADM;AAEpBT,EAAAA,KAAK,EAAEL,SAAS,CAACe,MAFG;AAGpBT,EAAAA,IAAI,EAAEN,SAAS,CAACe,MAHI;AAIpBR,EAAAA,MAAM,EAAEP,SAAS,CAACc,MAJE;AAKpBN,EAAAA,eAAe,EAAER,SAAS,CAACgB;AALP,CAAtB;AAQA,eAAeb,SAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteCard } from \"../../utils/api\";\r\n\r\nfunction ListCards({ id, front, back, deckId, updateCardCount }) {\r\n  async function handleDeleteClick() {\r\n    const confirmDelete = window.confirm(\r\n      `Delete this card? \\n\\nYou will not be able to recover it.`\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      await deleteCard(id);\r\n      updateCardCount(-1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <p className=\"mb-2\">{front}</p>\r\n        <p className=\"mb-2\">{back}</p>\r\n      </div>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <Link type=\"button\" className=\"btn btn-secondary mx-2\" to=\"#\">\r\n          <i class=\"bi bi-pencil-fill\"></i> Edit\r\n        </Link>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger mr-2\"\r\n          onClick={() => handleDeleteClick()}\r\n        >\r\n          <i className=\"bi-trash\" role=\"img\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nListCards.propTypes = {\r\n  id: PropTypes.number,\r\n  front: PropTypes.string,\r\n  back: PropTypes.string,\r\n  deckId: PropTypes.number,\r\n  updateCardCount: PropTypes.func\r\n};\r\n\r\nexport default ListCards;\r\n"]},"metadata":{},"sourceType":"module"}