{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks\\\\ListDecks.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListDecks({\n  id,\n  name,\n  description,\n  cards,\n  updateCount\n}) {\n  async function handleDeleteClick() {\n    const confirmDelete = window.confirm(`Delete this deck? \\n\\nYou will not be able to recover it.`);\n\n    if (confirmDelete) {\n      await deleteDeck(id);\n      updateCount(-1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        type: \"button\",\n        className: \"btn btn-secondary ml-2\",\n        to: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-eye\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" View\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        type: \"button\",\n        className: \"btn btn-primary mx-2\",\n        to: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-journal-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \" Study\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-auto mr-2\",\n        onClick: () => handleDeleteClick(),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi-trash\",\n          role: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ListDecks;\nListDecks.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  cards: PropTypes.array,\n  updateCount: PropTypes.func\n};\nexport default ListDecks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListDecks\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Decks/ListDecks.js"],"names":["React","PropTypes","Link","useHistory","deleteDeck","ListDecks","id","name","description","cards","updateCount","handleDeleteClick","confirmDelete","window","confirm","propTypes","number","string","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA;AAAhC,CAAnB,EAAkE;AAChE,iBAAeC,iBAAf,GAAmC;AACjC,UAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CACnB,2DADmB,CAAtB;;AAIA,QAAIF,aAAJ,EAAmB;AACjB,YAAMR,UAAU,CAACE,EAAD,CAAhB;AACAI,MAAAA,WAAW,CAAC,CAAC,CAAF,CAAX;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAIE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC,wBAA9B;AAAuD,QAAA,EAAE,EAAC,GAA1D;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC,sBAA9B;AAAqD,QAAA,EAAE,EAAC,GAAxD;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,6BAFZ;AAGE,QAAA,OAAO,EAAE,MAAMG,iBAAiB,EAHlC;AAAA,gCAKE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAwB,UAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;KAtCQN,S;AAwCTA,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,EAAE,EAAEL,SAAS,CAACe,MADM;AAEpBT,EAAAA,IAAI,EAAEN,SAAS,CAACgB,MAFI;AAGpBT,EAAAA,WAAW,EAAEP,SAAS,CAACgB,MAHH;AAIpBR,EAAAA,KAAK,EAAER,SAAS,CAACiB,KAJG;AAKpBR,EAAAA,WAAW,EAAET,SAAS,CAACkB;AALH,CAAtB;AAQA,eAAed,SAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../../utils/api\";\r\n\r\nfunction ListDecks({ id, name, description, cards, updateCount }) {\r\n  async function handleDeleteClick() {\r\n    const confirmDelete = window.confirm(\r\n      `Delete this deck? \\n\\nYou will not be able to recover it.`\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      await deleteDeck(id);\r\n      updateCount(-1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n          <div className=\"d-flex\">\r\n\r\n          </div>\r\n        <h3 className=\"card-title\">{name}</h3>\r\n        <p className=\"card-text\">{description}</p>\r\n      </div>\r\n      <div className=\"d-flex mb-2\">\r\n        <Link type=\"button\" className=\"btn btn-secondary ml-2\" to=\"#\">\r\n          <i className=\"bi bi-eye\"></i> View\r\n        </Link>\r\n        <Link type=\"button\" className=\"btn btn-primary mx-2\" to=\"#\">\r\n          <i className=\"bi bi-journal-check\"></i> Study\r\n        </Link>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger ml-auto mr-2\"\r\n          onClick={() => handleDeleteClick()}\r\n        >\r\n          <i className=\"bi-trash\" role=\"img\"></i> Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nListDecks.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  cards: PropTypes.array,\r\n  updateCount: PropTypes.func,\r\n};\r\n\r\nexport default ListDecks;\r\n"]},"metadata":{},"sourceType":"module"}