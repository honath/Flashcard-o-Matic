{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks\\\\ListDecks.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListDecks({\n  id,\n  name,\n  description,\n  cards,\n  updateCount\n}) {\n  async function handleDeleteClick() {\n    const confirmDelete = window.confirm(`Delete this deck? \\n\\nYou will not be able to recover it.`);\n\n    if (confirmDelete) {\n      await deleteDeck(id);\n      updateCount(-1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n\n_c = ListDecks;\nListDecks.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  cards: PropTypes.array,\n  updateCount: PropTypes.func\n};\nexport default ListDecks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListDecks\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Decks/ListDecks.js"],"names":["React","PropTypes","useHistory","deleteDeck","ListDecks","id","name","description","cards","updateCount","handleDeleteClick","confirmDelete","window","confirm","propTypes","number","string","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA;AAAhC,CAAnB,EAAkE;AAEhE,iBAAeC,iBAAf,GAAmC;AACjC,UAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CACnB,2DADmB,CAAtB;;AAIA,QAAIF,aAAJ,EAAmB;AACf,YAAMR,UAAU,CAACE,EAAD,CAAhB;AACAI,MAAAA,WAAW,CAAC,CAAC,CAAF,CAAX;AACH;AACF;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAA2BF,EAA3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;KArBQD,S;AAuBTA,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,EAAE,EAAEJ,SAAS,CAACc,MADM;AAEpBT,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAFI;AAGpBT,EAAAA,WAAW,EAAEN,SAAS,CAACe,MAHH;AAIpBR,EAAAA,KAAK,EAAEP,SAAS,CAACgB,KAJG;AAKpBR,EAAAA,WAAW,EAAER,SAAS,CAACiB;AALH,CAAtB;AAQA,eAAed,SAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../../utils/api\";\r\n\r\nfunction ListDecks({ id, name, description, cards, updateCount }) {\r\n\r\n  async function handleDeleteClick() {\r\n    const confirmDelete = window.confirm(\r\n      `Delete this deck? \\n\\nYou will not be able to recover it.`\r\n    );\r\n\r\n    if (confirmDelete) {\r\n        await deleteDeck(id);\r\n        updateCount(-1);\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"card\" key={id}>\r\n          <div className=\"card-body\">\r\n              <h3 className=\"card-title\">{name}</h3>\r\n              <p>{description}</p>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nListDecks.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  cards: PropTypes.array,\r\n  updateCount: PropTypes.func,\r\n};\r\n\r\nexport default ListDecks;\r\n"]},"metadata":{},"sourceType":"module"}