{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport ListDecks from \"./ListDecks\";\nimport { listDecks } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  deckCount,\n  updateCount\n}) {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDecks() {\n      try {\n        const response = await listDecks(abortController.signal);\n        setDecks(response);\n      } catch (err) {\n        if (!err.name === \"AbortError\") {\n          throw err;\n        }\n      }\n    }\n\n    getDecks();\n    return () => abortController.abort();\n  }, [deckCount]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      type: \"button\",\n      className: \"btn btn-secondary mb-2\",\n      to: \"/decks/new\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-plus-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), \" Create Deck\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), decks.map(({\n      id,\n      name,\n      description,\n      cards\n    }) => {\n      return /*#__PURE__*/_jsxDEV(ListDecks, {\n        id: id,\n        name: name,\n        description: description,\n        cards: cards,\n        updateCount: updateCount\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = Home;\nHome.propTypes = {\n  deckCount: PropTypes.number,\n  updateCount: PropTypes.func\n};\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Home/Home.js"],"names":["React","Fragment","useEffect","useState","Link","PropTypes","ListDecks","listDecks","Home","deckCount","updateCount","decks","setDecks","abortController","AbortController","getDecks","response","signal","err","name","abort","map","id","description","cards","propTypes","number","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAA0C;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACM,eAAe,CAACI,MAAjB,CAAhC;AAEAL,QAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,OAJD,CAIE,OAAOE,GAAP,EAAY;AACZ,YAAI,CAACA,GAAG,CAACC,IAAL,KAAc,YAAlB,EAAgC;AAC9B,gBAAMD,GAAN;AACD;AACF;AACF;;AAEDH,IAAAA,QAAQ;AACR,WAAO,MAAMF,eAAe,CAACO,KAAhB,EAAb;AACD,GAjBQ,EAiBN,CAACX,SAAD,CAjBM,CAAT;AAmBA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAuD,MAAA,EAAE,EAAC,YAA1D;AAAA,8BACA;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGE,KAAK,CAACU,GAAN,CAAU,CAAC;AAAEC,MAAAA,EAAF;AAAMH,MAAAA,IAAN;AAAYI,MAAAA,WAAZ;AAAyBC,MAAAA;AAAzB,KAAD,KAAsC;AAC/C,0BAAO,QAAC,SAAD;AAEL,QAAA,EAAE,EAAEF,EAFC;AAGL,QAAA,IAAI,EAAEH,IAHD;AAIL,QAAA,WAAW,EAAEI,WAJR;AAKL,QAAA,KAAK,EAAEC,KALF;AAML,QAAA,WAAW,EAAEd;AANR,SACAY,EADA;AAAA;AAAA;AAAA;AAAA,cAAP;AAQD,KATA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvCQd,I;;KAAAA,I;AAyCTA,IAAI,CAACiB,SAAL,GAAiB;AACfhB,EAAAA,SAAS,EAAEJ,SAAS,CAACqB,MADN;AAEfhB,EAAAA,WAAW,EAAEL,SAAS,CAACsB;AAFR,CAAjB;AAKA,eAAenB,IAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ListDecks from \"./ListDecks\";\r\nimport { listDecks } from \"../../utils/api\";\r\n\r\nfunction Home({ deckCount, updateCount }) {\r\n  const [decks, setDecks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function getDecks() {\r\n      try {\r\n        const response = await listDecks(abortController.signal);\r\n\r\n        setDecks(response);\r\n      } catch (err) {\r\n        if (!err.name === \"AbortError\") {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    getDecks();\r\n    return () => abortController.abort();\r\n  }, [deckCount]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link type=\"button\" className=\"btn btn-secondary mb-2\" to=\"/decks/new\">\r\n      <i class=\"bi bi-plus-square\"></i> Create Deck\r\n      </Link>\r\n      {decks.map(({ id, name, description, cards }) => {\r\n        return <ListDecks\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          description={description}\r\n          cards={cards}\r\n          updateCount={updateCount}\r\n        />;\r\n      })}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  deckCount: PropTypes.number,\r\n  updateCount: PropTypes.func,\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}