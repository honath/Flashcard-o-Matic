{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks\\\\ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDeck() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDeck() {\n      try {\n        const response = await readDeck(deckId, abortController.signal);\n        setDeck({ ...response\n        });\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Aborted getDeck() in ViewDeck\");\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    getDeck();\n    return () => abortController.abort();\n  }, []);\n\n  if (deck) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bi bi-door-open-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), \" Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-hourglass-split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \"Fetching data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(ViewDeck, \"5b2BDNDIQPgvJGvNLAA2hS4I2fU=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewDeck;\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Decks/ViewDeck.js"],"names":["React","Fragment","useEffect","useState","Link","useParams","readDeck","ViewDeck","deckId","deck","setDeck","abortController","AbortController","getDeck","response","signal","err","name","console","log","abort","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACE,MAAD,EAASG,eAAe,CAACI,MAAzB,CAA/B;AACAL,QAAAA,OAAO,CAAC,EAAE,GAAGI;AAAL,SAAD,CAAP;AACD,OAHD,CAGE,OAAOE,GAAP,EAAY;AACZ,YAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,SAFD,MAEO;AACL,gBAAMH,GAAN;AACD;AACF;AACF;;AAEDH,IAAAA,OAAO;AAEP,WAAO,MAAMF,eAAe,CAACS,KAAhB,EAAb;AACD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,MAAIX,IAAJ,EAAU;AACR,wBACE,QAAC,QAAD;AAAA,8BACE;AAAK,sBAAW,YAAhB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE,QAAC,IAAD;AAAA,sCACE;AAAG,gBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA,sBACGA,IAAI,CAACQ;AADR;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,gCACI;AAAA,oBAAKR,IAAI,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIR,IAAI,CAACY;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GArBD,MAqBO;AACL,wBACE;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF;;GArDQd,Q;UACYF,S;;;KADZE,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api\";\r\n\r\nfunction ViewDeck() {\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState({});\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function getDeck() {\r\n      try {\r\n        const response = await readDeck(deckId, abortController.signal);\r\n        setDeck({ ...response });\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Aborted getDeck() in ViewDeck\");\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    getDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  if (deck) {\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <Link>\r\n                <i class=\"bi bi-door-open-fill\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">\r\n              {deck.name}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <div>\r\n            <h3>{deck.name}</h3>\r\n            <p>{deck.description}</p>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <p>\r\n        <i class=\"bi bi-hourglass-split\"></i>Fetching data...\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ViewDeck;\r\n"]},"metadata":{},"sourceType":"module"}