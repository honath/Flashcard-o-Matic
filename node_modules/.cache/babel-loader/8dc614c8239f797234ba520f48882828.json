{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Decks\\\\ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteDeck, readDeck } from \"../../utils/api\";\nimport ListCards from \"./ListCards.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDeck({\n  updateCount\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cardCount, setCardCount] = useState(0);\n  const history = useHistory(); //Used to refresh component\n\n  const updateCardCount = val => {\n    setCardCount(() => cardCount + val);\n  }; //Get deck on mount\n\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDeck() {\n      try {\n        const response = await readDeck(deckId, abortController.signal);\n        setDeck({ ...response\n        });\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Aborted getDeck() in ViewDeck\");\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    getDeck();\n    return () => abortController.abort();\n  }, [cardCount]); //Delete deck handler\n\n  async function handleDeleteClick() {\n    const confirmDelete = window.confirm(`Delete this deck? \\n\\nYou will not be able to recover it.`);\n\n    if (confirmDelete) {\n      await deleteDeck(deckId);\n      updateCount(-1);\n      history.push(\"/\");\n    }\n  } //Display message if there are no cards in the deck.\n\n\n  function NoCards() {\n    if (!deck.cards.length) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: \"There are no cards in this deck.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    } else {\n      return null;\n    }\n  } //Await deck info\n\n\n  if (deck.id) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-door-open-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), \" Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}/edit`,\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-pencil-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \" Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          type: \"button\",\n          className: \"btn btn-primary mx-2\",\n          to: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-journal-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), \" Study\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          to: `/decks/${deckId}/cards/new`,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \" Add Cards\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger ml-auto mr-2\",\n          onClick: () => handleDeleteClick(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi-trash\",\n            role: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: [/*#__PURE__*/_jsxDEV(NoCards, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), deck.cards.map(({\n            id,\n            front,\n            back,\n            deckId\n          }) => {\n            return /*#__PURE__*/_jsxDEV(ListCards, {\n              id: id,\n              front: front,\n              back: back,\n              deckId: deckId,\n              updateCardCount: updateCardCount\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-hourglass-split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), \"Fetching data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(ViewDeck, \"TuDMMUnrLjKa/2ajfk+gzxZGBuc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ViewDeck;\nViewDeck.propTypes = {\n  updateCount: PropTypes.func\n};\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Decks/ViewDeck.js"],"names":["React","Fragment","useEffect","useState","PropTypes","Link","useHistory","useParams","deleteDeck","readDeck","ListCards","ViewDeck","updateCount","deckId","deck","setDeck","cardCount","setCardCount","history","updateCardCount","val","abortController","AbortController","getDeck","response","signal","err","name","console","log","abort","handleDeleteClick","confirmDelete","window","confirm","push","NoCards","cards","length","id","description","map","front","back","propTypes","func"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { deleteDeck, readDeck } from \"../../utils/api\";\r\n\r\nimport ListCards from \"./ListCards.js\";\r\n\r\nfunction ViewDeck({ updateCount }) {\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState({});\r\n  const [cardCount, setCardCount] = useState(0);\r\n  const history = useHistory();\r\n\r\n  //Used to refresh component\r\n  const updateCardCount = (val) => {\r\n    setCardCount(() => cardCount + val);\r\n  };\r\n\r\n  //Get deck on mount\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function getDeck() {\r\n      try {\r\n        const response = await readDeck(deckId, abortController.signal);\r\n        setDeck({ ...response });\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"Aborted getDeck() in ViewDeck\");\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n\r\n    getDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, [cardCount]);\r\n\r\n  //Delete deck handler\r\n  async function handleDeleteClick() {\r\n    const confirmDelete = window.confirm(\r\n      `Delete this deck? \\n\\nYou will not be able to recover it.`\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      await deleteDeck(deckId);\r\n      updateCount(-1);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  //Display message if there are no cards in the deck.\r\n  function NoCards() {\r\n    if (!deck.cards.length) {\r\n      return <li className=\"list-group-item\">There are no cards in this deck.</li>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //Await deck info\r\n  if (deck.id) {\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">\r\n                <i className=\"bi bi-door-open-fill\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">{deck.name}</li>\r\n          </ol>\r\n        </nav>\r\n        <div>\r\n          <h3>{deck.name}</h3>\r\n          <p>{deck.description}</p>\r\n        </div>\r\n        <div className=\"d-flex mb-3\">\r\n          <Link to={`/decks/${deckId}/edit`} type=\"button\" className=\"btn btn-secondary\">\r\n            <i className=\"bi bi-pencil-fill\"></i> Edit\r\n          </Link>\r\n          <Link type=\"button\" className=\"btn btn-primary mx-2\" to=\"#\">\r\n            <i className=\"bi bi-journal-check\"></i> Study\r\n          </Link>\r\n          <Link\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            to={`/decks/${deckId}/cards/new`}\r\n          >\r\n            <i className=\"bi bi-plus\"></i> Add Cards\r\n          </Link>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger ml-auto mr-2\"\r\n            onClick={() => handleDeleteClick()}\r\n          >\r\n            <i className=\"bi-trash\" role=\"img\"></i> Delete\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <h2>Cards</h2>\r\n          <ul className=\"list-group\">\r\n            <NoCards />\r\n            {deck.cards.map(({ id, front, back, deckId }) => {\r\n              return (\r\n                <ListCards\r\n                  key={id}\r\n                  id={id}\r\n                  front={front}\r\n                  back={back}\r\n                  deckId={deckId}\r\n                  updateCardCount={updateCardCount}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <p>\r\n        <i className=\"bi bi-hourglass-split\"></i>Fetching data...\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nViewDeck.propTypes = {\r\n  updateCount: PropTypes.func,\r\n};\r\n\r\nexport default ViewDeck;\r\n"]},"metadata":{},"sourceType":"module"}