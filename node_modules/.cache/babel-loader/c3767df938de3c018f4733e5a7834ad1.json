{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study\\\\StudyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { listCards } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudyCard({\n  cards\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [study, setStudy] = useState({\n    isFlipped: false,\n    cardIndex: 0\n  });\n  const history = useHistory();\n\n  const handleNextClick = () => {\n    if (study.cardIndex < cards.length - 1) {}\n  };\n\n  if (cards.length > 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Card \", study.cardIndex + 1, \" of \", cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: study.isFlipped ? cards[study.cardIndex].back : cards[study.cardIndex].front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => setStudy({ ...study,\n            isFlipped: !study.isFlipped\n          }),\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary ml-2\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", cards.length, \" cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        to: `/decks/${deckId}/cards/new`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" Add Cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(StudyCard, \"gwc4IO6NakjYlgkI5muoA+eEVCs=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = StudyCard;\nStudyCard.propTypes = {\n  cards: PropTypes.array\n};\nexport default StudyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCard\");","map":{"version":3,"sources":["C:/Users/Alex/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Study/StudyCard.js"],"names":["React","useState","PropTypes","Link","useHistory","useParams","listCards","StudyCard","cards","deckId","study","setStudy","isFlipped","cardIndex","history","handleNextClick","length","back","front","propTypes","array"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,SAAS,EAA5B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAAEW,IAAAA,SAAS,EAAE,KAAb;AAAoBC,IAAAA,SAAS,EAAE;AAA/B,GAAD,CAAlC;AACA,QAAMC,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC1B,QAAIL,KAAK,CAACG,SAAN,GAAkBL,KAAK,CAACQ,MAAN,GAAe,CAArC,EAAwC,CAEvC;AACJ,GAJD;;AAMA,MAAIR,KAAK,CAACQ,MAAN,GAAe,CAAnB,EAAsB;AACpB,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,8BACQN,KAAK,CAACG,SAAN,GAAkB,CAD1B,UACiCL,KAAK,CAACQ,MADvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBACGN,KAAK,CAACE,SAAN,GACGJ,KAAK,CAACE,KAAK,CAACG,SAAP,CAAL,CAAuBI,IAD1B,GAEGT,KAAK,CAACE,KAAK,CAACG,SAAP,CAAL,CAAuBK;AAH7B;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,mBAAhC;AAAoD,UAAA,OAAO,EAAE,MAAMP,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,YAAAA,SAAS,EAAE,CAACF,KAAK,CAACE;AAA7B,WAAD,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD,GAnBD,MAmBO;AACL,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,qEACiDJ,KAAK,CAACQ,MADvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,IAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,EAAE,EAAG,UAASP,MAAO,YAHvB;AAAA,gCAKE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;AACF;;GAhDQF,S;UACYF,S,EAEHD,U;;;KAHTG,S;AAkDTA,SAAS,CAACY,SAAV,GAAsB;AACpBX,EAAAA,KAAK,EAAEN,SAAS,CAACkB;AADG,CAAtB;AAIA,eAAeb,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { listCards } from \"../../utils/api\";\r\n\r\nfunction StudyCard({ cards }) {\r\n  const { deckId } = useParams();\r\n  const [study, setStudy] = useState({ isFlipped: false, cardIndex: 0 });\r\n  const history = useHistory();\r\n\r\n  const handleNextClick = () => {\r\n      if (study.cardIndex < cards.length - 1) {\r\n          \r\n      }\r\n  }\r\n\r\n  if (cards.length > 2) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">\r\n            Card {study.cardIndex + 1} of {cards.length}\r\n          </h5>\r\n          <p className=\"card-text\">\r\n            {study.isFlipped\r\n              ? cards[study.cardIndex].back\r\n              : cards[study.cardIndex].front}\r\n          </p>\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setStudy({...study, isFlipped: !study.isFlipped})}>\r\n            Flip\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-primary ml-2\">Next</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3>Not enough cards.</h3>\r\n        <p>\r\n          You need at least 3 cards to study. There are {cards.length} cards in\r\n          this deck.\r\n        </p>\r\n        <Link\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          to={`/decks/${deckId}/cards/new`}\r\n        >\r\n          <i className=\"bi bi-plus\"></i> Add Cards\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStudyCard.propTypes = {\r\n  cards: PropTypes.array,\r\n};\r\n\r\nexport default StudyCard;\r\n"]},"metadata":{},"sourceType":"module"}